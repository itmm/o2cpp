#pragma once

#include "SYSTEM.h"

constexpr auto Token_unknown { 0 };
constexpr auto Token_eof { 1 };
constexpr auto Token_identifier { 2 };
constexpr auto Token_integerLiteral { 3 };
constexpr auto Token_floatLiteral { 4 };
constexpr auto Token_stringLiteral { 5 };
constexpr auto Token_charLiteral { 6 };
constexpr auto Token_plus { 7 };
constexpr auto Token_minus { 8 };
constexpr auto Token_star { 9 };
constexpr auto Token_slash { 10 };
constexpr auto Token_leftParenthesis { 11 };
constexpr auto Token_rightParenthesis { 12 };
constexpr auto Token_semicolon { 13 };
constexpr auto Token_period { 14 };
constexpr auto Token_comma { 15 };
constexpr auto Token_colon { 16 };
constexpr auto Token_assign { 17 };
constexpr auto Token_equals { 18 };
constexpr auto Token_bar { 19 };
constexpr auto Token_notEquals { 20 };
constexpr auto Token_leftBracket { 21 };
constexpr auto Token_rightBracket { 22 };
constexpr auto Token_ptr { 23 };
constexpr auto Token_andop { 24 };
constexpr auto Token_notop { 25 };
constexpr auto Token_leftBrace { 26 };
constexpr auto Token_rightBrace { 27 };
constexpr auto Token_less { 28 };
constexpr auto Token_lessOrEqual { 29 };
constexpr auto Token_greater { 30 };
constexpr auto Token_greaterOrEqual { 31 };
constexpr auto Token_range { 32 };
constexpr auto Token_kwARRAY { 33 };
constexpr auto Token_kwBEGIN { 34 };
constexpr auto Token_kwBY { 35 };
constexpr auto Token_kwCASE { 36 };
constexpr auto Token_kwCONST { 37 };
constexpr auto Token_kwDIV { 38 };
constexpr auto Token_kwDO { 39 };
constexpr auto Token_kwEND { 40 };
constexpr auto Token_kwELSE { 41 };
constexpr auto Token_kwELSIF { 42 };
constexpr auto Token_kwFALSE { 43 };
constexpr auto Token_kwFOR { 44 };
constexpr auto Token_kwIF { 45 };
constexpr auto Token_kwIMPORT { 46 };
constexpr auto Token_kwIN { 47 };
constexpr auto Token_kwIS { 48 };
constexpr auto Token_kwMOD { 49 };
constexpr auto Token_kwMODULE { 50 };
constexpr auto Token_kwNIL { 51 };
constexpr auto Token_kwOF { 52 };
constexpr auto Token_kwOR { 53 };
constexpr auto Token_kwPOINTER { 54 };
constexpr auto Token_kwPROCEDURE { 55 };
constexpr auto Token_kwRECORD { 56 };
constexpr auto Token_kwREPEAT { 57 };
constexpr auto Token_kwRETURN { 58 };
constexpr auto Token_kwTHEN { 59 };
constexpr auto Token_kwTO { 60 };
constexpr auto Token_kwTRUE { 61 };
constexpr auto Token_kwTYPE { 62 };
constexpr auto Token_kwUNTIL { 63 };
constexpr auto Token_kwVAR { 64 };
constexpr auto Token_kwWHILE { 65 };
void Token_init_module();
